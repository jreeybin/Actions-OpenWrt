name: OpenWrt 2

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/jreeybin/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 查看
      uses: actions/checkout@main

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"

    - name: 创建模拟物理磁盘
      run: |
        mnt_size=$(expr $(df -h /mnt | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 1)
        root_size=$(expr $(df -h / | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 4)
        sudo truncate -s "${mnt_size}"G /mnt/mnt.img
        sudo truncate -s "${root_size}"G /root.img
        sudo losetup /dev/loop6 /mnt/mnt.img
        sudo losetup /dev/loop7 /root.img
        sudo pvcreate /dev/loop6
        sudo pvcreate /dev/loop7
        sudo vgcreate github /dev/loop6 /dev/loop7
        sudo lvcreate -n runner -l 100%FREE github
        sudo mkfs.xfs /dev/github/runner
        sudo mkdir -p /builder
        sudo mount /dev/github/runner /builder
        sudo chown -R runner.runner /builder
        df -Th

    - name: 克隆源代码
      working-directory: /builder
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /builder/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 加载自定义订阅源
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 更新动态
      run: cd openwrt && ./scripts/feeds update -a

    - name: 安装 feed
      run: cd openwrt && ./scripts/feeds install -a

    - name: 加载自定义配置
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: 下载软件包
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: 清除服务器空间
      id: clean
      if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
      run: |
        cd openwrt/
        [[ -d "output" ]] || mkdir output
        # 检查并复制文件
        if ls bin/targets/*/*/*rootfs.tar.gz 1>/dev/null 2>&1; then
            cp -f bin/targets/*/*/*rootfs.tar.gz output/
        else
            echo "Warning: No rootfs.tar.gz file found in bin/targets/"
        fi
        cp -f .config output/config
        rm -rf $(ls . | grep -v "^output$" | xargs) 2>/dev/null

        # Generate sha256sum file
        cd output/
        for file in *; do [[ ! -d "${file}" ]] && sha256sum "${file}" >"${file}.sha"; done

        # Set output information
        df -hT ${PWD}
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: 上传 OpenWrt 到 Release
      uses: ncipollo/release-action@main
      if: ${{ steps.clean.outputs.status }} == 'success' && !cancelled()
      with:
        tag: ${{ steps.codes.outputs.build_tag }}
        artifacts: openwrt/output/*
        allowUpdates: true
        removeArtifacts: false
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: 打包 OpenWrt
      if: ${{ steps.clean.outputs.status }} == 'success' && !cancelled()
      uses: ophub/amlogic-s9xxx-openwrt@main
      with:
        openwrt_path: openwrt/output/*rootfs.tar.gz
        openwrt_board: ${{ inputs.openwrt_board }}
        openwrt_kernel: ${{ inputs.openwrt_kernel }}
        auto_kernel: ${{ inputs.auto_kernel }}
        kernel_repo: ${{ inputs.kernel_repo }}
        kernel_usage: ${{ inputs.kernel_usage }}
        builder_name: ${{ inputs.builder_name }}

    - name: 上传打包好的OpenWrt
      uses: ncipollo/release-action@main
      if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
      with:
        tag: ${{ steps.codes.outputs.build_tag }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        allowUpdates: true
        removeArtifacts: false
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          ### OpenWrt Image information
          - Default IP: 192.168.1.1
          - Default username: root
          - Default password: password
          - Default WIFI name: OpenWrt
          - Default WIFI password: none
          ### Install to EMMC
          - Login to OpenWrt → System → Amlogic Service → Install OpenWrt
          ### OpenWrt source code
          - [${{ steps.codes.outputs.TAGS_NAME }}](${{ steps.codes.outputs.REPO_URL }})
          ### OpenWrt Image Verification
          - sha256sum
